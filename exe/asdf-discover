#!/usr/bin/env ruby

require "asdf_discover"
require "fileutils"
require "optparse"
require "ostruct"
require "pathname"

options = OpenStruct.new
options.latest = false
options.global = false
options.path = Dir.pwd

def path(location)
  Pathname.new(location).join(AsdfDiscover::TOOL_VERSIONS).to_s
end

def display_results(command)
  command.results.each do |result|
    result.messages.each { |msg| puts msg }

    exit(result.status) if result.error?
  end
end

# update CLI:
# asdf-discover                   => attempt to generate .tool-versions in pwd (search)
# asdf-discover --update          => update .tool-versions in pwd (search)
# asdf-discover --update --global => update .tool-versions in $HOME/.tool-versions (via `asdf list`)
OptionParser.new do |opts|
  opts.on("--latest", "Update .tool-versions to latest installed") do
    options.latest = true
  end

  opts.on("--global", "Set working path to $HOME. i.e. --latest --global would update $HOME/.tool-versions to latest installed") do
    options.global = true
  end
end.parse!

if ARGV.first
  if Dir.exists?(ARGV.first)
    options.path = File.absolute_path(ARGV.first)
  else
    puts "Path #{ARGV.first} does not exist!"
    exit(1)
  end
elsif options.global
  options.path = Dir.home
end

FileUtils.cd(options.path)

if options.latest
  puts "Updating to latest in #{options.path}"
else
  search = AsdfDiscover::Commands::Search.new
  search.run(options)

  display_results(search)
end

